"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3644],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(t),g=a,m=u["".concat(c,".").concat(g)]||u[g]||p[g]||i;return t?r.createElement(m,o(o({ref:n},d),{},{components:t})):r.createElement(m,o({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=g;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},8466:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const i={title:"Drawing on the canvas"},o=void 0,l={unversionedId:"topics/drawing-on-the-canvas",id:"topics/drawing-on-the-canvas",title:"Drawing on the canvas",description:"Extending behavior is done using event handlers just like a regular HTML element.",source:"@site/docs/topics/drawing-on-the-canvas.md",sourceDirName:"topics",slug:"/topics/drawing-on-the-canvas",permalink:"/topics/drawing-on-the-canvas",draft:!1,editUrl:"https://github.com/TonyGermaneri/canvas-datagrid/edit/main/docs/docs/topics/drawing-on-the-canvas.md",tags:[],version:"current",frontMatter:{title:"Drawing on the canvas"},sidebar:"docs",previous:{title:"Building and Testing",permalink:"/building-and-testing"},next:{title:"Extending the visual appearance",permalink:"/topics/extending-the-visual-appearance"}},c={},s=[],d={toc:s};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Extending behavior is done using event handlers just like a regular HTML element.\nYou can alter the content of a rendered cell by attaching to such an event handler.\nBelow is an example of drawing an image into a cell:"),(0,a.kt)("p",null,"This example attaches to two events. ",(0,a.kt)("inlineCode",{parentName:"p"},"rendertext")," to prevent the rendering of text into the cell..."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"grid.addEventListener('rendertext', function (e) {\n  if (e.cell.rowIndex > -1) {\n    if (e.cell.header.name === 'MyImageColumnName') {\n      e.cell.formattedValue = e.cell.value ? '' : 'No Image';\n    }\n  }\n});\n")),(0,a.kt)("p",null,"... and ",(0,a.kt)("inlineCode",{parentName:"p"},"afterrendercell")," to draw an image into the cell after the background and borders are drawn.\nBecause the image is loaded asynchronously, you need to attach to the load event to actually draw\nthe image."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var imgs = {};\n\ngrid.addEventListener('afterrendercell', function (e) {\n  var i,\n    contextGrid = this;\n\n  if (\n    e.cell.header.name === 'MyImageColumnName' &&\n    e.cell.value &&\n    e.cell.rowIndex > -1\n  ) {\n    if (!imgs[e.cell.value]) {\n      i = imgs[e.cell.value] = new Image();\n      i.src = e.cell.value;\n      i.onload = function () {\n        i.targetHeight = e.cell.height;\n        i.targetWidth = e.cell.height * (i.width / i.height);\n        contextGrid.draw();\n      };\n      return;\n    }\n    i = imgs[e.cell.value];\n    if (i.width !== 0) {\n      e.ctx.drawImage(i, e.cell.x, e.cell.y, i.targetWidth, i.targetHeight);\n    }\n  }\n});\n")))}u.isMDXComponent=!0}}]);