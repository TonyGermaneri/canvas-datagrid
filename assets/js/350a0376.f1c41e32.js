"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5412],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>m});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),s=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},c=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),d=s(a),g=r,m=d["".concat(p,".").concat(g)]||d[g]||u[g]||i;return a?n.createElement(m,o(o({ref:e},c),{},{components:a})):n.createElement(m,o({ref:e},c))}));function m(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,o=new Array(i);o[0]=g;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l[d]="string"==typeof t?t:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},4312:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const i={title:"Setting and getting data"},o=void 0,l={unversionedId:"topics/setting-and-getting-data",id:"topics/setting-and-getting-data",title:"Setting and getting data",description:"Data is set according to the MIME type parser defined in grid.dataType. The default type parser is application/x-canvas-datagrid.",source:"@site/docs/topics/setting-and-getting-data.md",sourceDirName:"topics",slug:"/topics/setting-and-getting-data",permalink:"/topics/setting-and-getting-data",draft:!1,editUrl:"https://github.com/TonyGermaneri/canvas-datagrid/edit/main/docs/docs/topics/setting-and-getting-data.md",tags:[],version:"current",frontMatter:{title:"Setting and getting data"},sidebar:"docs",previous:{title:"Setting a schema",permalink:"/topics/setting-a-schema"},next:{title:"Setting height and width",permalink:"/topics/setting-height-and-width"}},p={},s=[],c={toc:s};function d(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Data is set according to the MIME type parser defined in grid.dataType. The default type parser is ",(0,r.kt)("inlineCode",{parentName:"p"},"application/x-canvas-datagrid"),"."),(0,r.kt)("p",null,"This format expects an array of objects or an array of arrays that strictly conform to a schema (i.e.: they all have the same properties or lengths)."),(0,r.kt)("p",null,"Example ",(0,r.kt)("inlineCode",{parentName:"p"},"application/x-canvas-datagrid")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"[\n  { col1: 'row 1 column 1', col2: 'row 1 column 2', col3: 'row 1 column 3' },\n  { col1: 'row 2 column 1', col2: 'row 2 column 2', col3: 'row 2 column 3' },\n];\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"[\n  ['row 1 column 1', 'row 1 column 2', 'row 1 column 3'],\n  ['row 2 column 1', 'row 2 column 2', 'row 2 column 3'],\n];\n")),(0,r.kt)("p",null,"When getting data, no matter how it was set, it will be returned as ",(0,r.kt)("inlineCode",{parentName:"p"},"application/x-canvas-datagrid")," (an array of objects)."),(0,r.kt)("p",null,"For more information on using and creating custom parsers see: ",(0,r.kt)("a",{parentName:"p",href:"https://canvas-datagrid.js.org/#parsers"},"parsers")),(0,r.kt)("p",null,"The table below lists ways to set data and the default parser used."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Parser"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data property"),(0,r.kt)("td",{parentName:"tr",align:null},"application/x-canvas-datagrid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"web component data attribute"),(0,r.kt)("td",{parentName:"tr",align:null},"application/json+x-canvas-datagrid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"web component innerHTML attribute"),(0,r.kt)("td",{parentName:"tr",align:null},"application/json+x-canvas-datagrid")))),(0,r.kt)("p",null,"There are two built in parsers."),(0,r.kt)("p",null,"application/x-canvas-datagrid (Default)\napplication/json+x-canvas-datagrid"),(0,r.kt)("p",null,"Note: When setting data via the web component innerHTML attribute, only string data can be passed."),(0,r.kt)("p",null,"Note: When you pass string data into the web component and the ",(0,r.kt)("inlineCode",{parentName:"p"},"grid.dataType")," is set to the default: ",(0,r.kt)("inlineCode",{parentName:"p"},"application/x-canvas-datagrid")," it will become set to ",(0,r.kt)("inlineCode",{parentName:"p"},"application/json+x-canvas-datagrid")," to parse the string data. If ",(0,r.kt)("inlineCode",{parentName:"p"},"grid.dataType")," was previously changed, the parser it was changed to will be used instead."))}d.isMDXComponent=!0}}]);