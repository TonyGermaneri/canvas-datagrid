name: Release new tagged version

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build-all --if-present
      - name: Test
        run: npm test
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./dist/*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: ./dist
      - name: Include dist/ folder (the build) in release
        run: |
          zip -r ${{ github.event.repository.name }}.zip *
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing its ID
          # to get its outputs object, which include a `upload_url`. See this
          # blog post for more info:
          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
      - name: Publish NPM Module
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_DEPLOY_KEY }}

  publish-documentation:
    name: Publish documentation
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: npm ci
      - name: Build debug version
        run: npm run build-dev
      - name: Build documentation
        run: npm run build-docs
      # This will make documentation available at
      # https://<username>.github.io/canvas-datagrid/docs/
      - name: Publish documentation to GitHub pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
